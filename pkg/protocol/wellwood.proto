syntax = "proto3";

package protocol;

option go_package = "../protocol";

enum ErrCode {
    NO_ERR = 0;
    META_SERVER_DOWN_ERR = 1;
    FILE_EXISTS_ERR = 2;
    FILE_DOWNLOAD_ERR = 3;
    WRONG_LEADER_ERR = 4;
    MARSHAL_SERVER_GROUP_META_REQ_ERR = 5;
    RPC_CALL_TIMEOUT_ERR = 6;
    PUT_BUCKET_TO_ENG_ERR = 7;
    DEL_BUCKET_FROM_ENG_ERR = 8;
    APPLY_JOIN_TODO_TO_STM_ERR = 9;
    APPLY_QUERY_TOPO_CONF_ERR = 10;
    APPLY_LEAVE_TODO_TO_STM_ERR = 11;
    PUT_OBJECT_META_TO_ENG_ERR = 12;
    GET_OBJECT_META_FROM_ENG_ERR = 13;
}

message FileUploadRequest {
  int64 file_length = 1;
  bytes file_content = 2;
  bool  override_write = 3;   
  string file_name = 4;
}

message FileUploadResponse {
  ErrCode err_code = 1;
}

message FileDownloadRequest {
  string file_name = 1;
}

message FileDownloadResponse {
  ErrCode err_code = 1;
  bytes file_content = 2;
}

message BucketOpRequest {
  string bucket_name = 1;
  string bucket_id = 2;
  Object object = 3;
}

message BucketOpResponse {
  repeated Bucket buckets = 1;
  repeated Object objects = 2;
}

message Bucket {
  string bucket_id = 1;
  string bucket_name = 2;
}

message Object {
  string object_id = 1;
  string object_name = 2;
  string from_bucket_id = 3;
  repeated FileBlockMeta object_blocks_meta = 4;
}

// for sdk upload and download file
service FileService {
  rpc Upload(FileUploadRequest) returns (FileUploadResponse);
  rpc Download(FileDownloadRequest) returns (FileDownloadResponse);
}

enum ConfigServerGroupMetaOpType {
   OP_SERVER_GROUP_JOIN = 0;
   OP_SERVER_GROUP_LEAVE = 1;
   OP_SERVER_GROUP_QUERY = 2;
   OP_OSS_BUCKET_ADD = 3;
   OP_OSS_BUCKET_DEL = 4;
   OP_OSS_BUCKET_LIST = 5;
   OP_OSS_OBJECT_PUT = 6;
   OP_OSS_OBJECT_GET = 7;
   OP_OSS_OBJECT_LIST = 8;
}

message ServerGroupMetaConfigRequest {
   map<int64, string> server_groups = 1; 
   repeated int64 gids = 2;
   int64 config_version = 3;
   ConfigServerGroupMetaOpType op_type = 4;
   BucketOpRequest bucket_op_req = 5;
}

message ServerGroupMetas {
    int64 config_version = 1;
    repeated int64 slots = 2;
    map<int64, string> server_groups = 3;
}

message ServerGroupMetaConfigResponse {
    ErrCode err_code = 1;
    ServerGroupMetas server_group_metas = 2;
    int64 leader_id = 3;
    BucketOpResponse bucket_op_res = 4;
}

message FileBlockMeta {
    int64 block_id = 1;
    int64 block_slot_id = 2;
}

// for meta service
service MetaService {
    // for multi-raft server group config manage
    rpc ServerGroupMeta (ServerGroupMetaConfigRequest) returns (ServerGroupMetaConfigResponse);
}

message WriteFileBlockRequest {
    string file_name = 1;
    FileBlockMeta file_blocks_meta = 2;
    bytes block_content = 3;
}

message WriteFileBlockResponse {
    ErrCode err_code = 1;
    int64 leader_id = 2;
}

message ReadFileBlockRequest {
    string file_name = 1;
    FileBlockMeta file_blocks_meta = 2;
}

message ReadFileBlockResponse {
    bytes block_content = 1;
}

// for block server deal with file block read write
service FileBlockService {
    rpc WriteFileBlock (WriteFileBlockRequest) returns (WriteFileBlockResponse) {}
    rpc ReadFileBlock (ReadFileBlockRequest) returns (ReadFileBlockResponse) {}
}
